name: CI

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: l4christ/my-repository
          build-args: |
            db_host=mysql
            db_username=laravel
            db_database=laravel
            db_password=laravel


# name: Deploy

# on:
#   push:
#     branches:
#       - dev-branch-emma

# jobs:
#   # test:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #   - uses: actions/checkout@v2
#   #   - name: Copy .env
#   #     run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#   #   - name: Install Dependencies
#   #     run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#   #   - name: Generate key
#   #     run: php artisan key:generate
#     # - name: Run tests
#       # run: vendor/bin/phpunit

#   build:
#     # needs: test
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Build and push Docker image
#       uses: mr-smithers-excellent/docker-build-push@v5
#       with:
#         image: l4christ/my-repository
#         tags: latest
#         registry: docker.io
#         dockerfile: Dockerfile
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Log in to Docker registry
  #     uses: docker/login-action@v1
  #     with:
  #       registry: docker.io
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: SSH into live server
    #   uses: appleboy/ssh-action@v0.1.6
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     script: |
    #       docker pull docker.io/l4christ/my-repository:latest
    #       docker run -d --name my-container -p 80:80 docker.io/l4christ/my-repository:latest

